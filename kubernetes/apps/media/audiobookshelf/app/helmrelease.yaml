---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: audiobookshelf
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"

    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          image:
            repository: ghcr.io/advplyr/audiobookshelf
            tag: 2.6.0
          env:
            TZ: "${TZ}"
            AUDIOBOOKSHELF_UID: 568
            AUDIOBOOKSHELF_GID: 568
            CONFIG_PATH: /config
            METADATA_PATH: /config/metadata
          resources:
            requests:
              cpu: 15m
              memory: 64M

    service:
      main:
        ports:
          http:
            port: 80

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: audiobookshelf.png
          gethomepage.dev/name: Audiobookshelf
          gethomepage.dev/group: Media
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
          authentik.home.arpa/enabled: "true"
          hajimari.io/icon: mdi:podcast
        hosts:
          - host: &host "audiobooks.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 2Gi
        storageClass: longhorn

    persistence:
      media:
        enabled: true
        path: ${SECRET_NFS_DATA}/audiobooks
        server: ${NAS_IP}
        type: nfs
        globalMounts:
          - path: /audiobooks
      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /.npm
