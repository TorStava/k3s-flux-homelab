---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app audiobookshelf
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: storage
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.29.0
            env:
              TZ: "${TZ}"
              AUDIOBOOKSHELF_UID: 568
              AUDIOBOOKSHELF_GID: 568
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
            resources:
              requests:
                cpu: 15m
                memory: 64M
            securityContext:
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: OnRootMismatch

    service:
      main:
        controller: main
        ports:
          http:
            port: 80

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: audiobookshelf.png
          gethomepage.dev/name: Audiobookshelf
          gethomepage.dev/group: Media
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
          authentik.home.arpa/enabled: "true"
          hajimari.io/icon: mdi:podcast
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: *app
      audiobooks:
        enabled: true
        type: nfs
        server: ${NAS_IP}
        path: ${SECRET_NFS_DATA}/audiobooks
      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /.npm
