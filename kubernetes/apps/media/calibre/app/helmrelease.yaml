---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: calibre
  namespace: media
spec:
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 30m
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: lscr.io/linuxserver/calibre
              tag: 7.1.0
            env:
              TZ: "${TZ}"
              PUID: "568"
              PGID: "1234"
              # PASSWORD: "${SECRET_CALIBRE_PASSWORD}"
              # CACHE_DIR: /cache
            resources:
              requests:
                cpu: 15m
                memory: 411M
        statefulset:
          volumeClaimTemplates:
            - name: config
              mountPath: /config
              accessMode: ReadWriteOnce
              size: 1Gi
              storageClass: longhorn

    # podSecurityContext:
    #   runAsUser: 568
    #   runAsGroup: 1234
    #   fsGroup: 1234
    #   fsGroupChangePolicy: "OnRootMismatch"
    # enableServiceLinks: false

    service:
      main:
        ports:
          http:
            port: &port 8080
      webserver:
        enabled: true
        controller: main
        primary: false
        type: ClusterIP
        ports:
          webserver:
            enabled: true
            port: 8081
            protocol: TCP
            targetPort: 8081

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: calibre.png
          gethomepage.dev/name: Calibre
          gethomepage.dev/group: Media
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
          authentik.home.arpa/enabled: "true"
        hosts:
          - host: &host calibre.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      media:
        enabled: true
        path: ${SECRET_NFS_DATA}/ebooks
        server: ${NAS_IP}
        type: nfs
        globalMounts:
          - path: /ebooks

    # probes:
    #   liveness: &probes
    #     enabled: true
    #     custom: true
    #     spec:
    #       httpGet:
    #         path: /
    #         port: *port
    #       initialDelaySeconds: 0
    #       periodSeconds: 10
    #       timeoutSeconds: 1
    #       failureThreshold: 3
    #   readiness: *probes
    #   startup:
    #     enabled: false
