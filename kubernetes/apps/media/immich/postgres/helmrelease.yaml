---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich-postgres
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: storage
  values:
    controllers:
      postgres:
        annotations:
          reloader.stakater.com/auto: "true"
          configmap.reloader.stakater.com/reload: &configmap immich-configmap
          secret.reloader.stakater.com/reload: &secret immich-secret
        containers:
          app:
            image:
              repository: tensorchord/pgvecto-rs
              tag: pg16-v0.2.1
            command:
              [
                "postgres",
                "-c",
                "shared_preload_libraries=vectors.so",
                "-c",
                'search_path="$$user", public, vectors',
                "-c",
                "logging_collector=on",
                "-c",
                "max_wal_size=2GB",
                "-c",
                "shared_buffers=512MB",
                "-c",
                "wal_compression=on",
              ]
            env:
              - name: POSTGRES_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: DB_PASSWORD
              - name: POSTGRES_USER
                valueFrom:
                  configMapKeyRef:
                    name: *configmap
                    key: DB_USERNAME
              - name: POSTGRES_DB
                valueFrom:
                  configMapKeyRef:
                    name: *configmap
                    key: DB_DATABASE_NAME
            securityContext:
              runAsUser: 1234
              runAsGroup: 1234
              fsGroup: 1234
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  exec:
                    command:
                      - pg_isready
                      - --dbname='${DB_DATABASE_NAME}' || exit 1; Chksum="$$(psql --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
                  initialDelaySeconds: 30
                  periodSeconds: 300
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 5m
                memory: 249M

    service:
      app:
        controller: postgres
        ports:
          postgres:
            port: 5432

    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /var/lib/postgresql/data
            subPath: postgresql
