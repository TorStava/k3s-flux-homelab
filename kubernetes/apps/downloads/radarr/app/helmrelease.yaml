---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/radarr-develop
      tag: 4.6.3.7516
    env:
      TZ: "${TZ}"
      RADARR__INSTANCE_NAME: Radarr
      RADARR__PORT: &port 80
      RADARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
      RADARR__LOG_LEVEL: info
      RADARR__API_KEY: ${RADARR_TOKEN}
    service:
      main:
        ports:
          http:
            port: *port
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: radarr.png
          gethomepage.dev/name: Radarr
          gethomepage.dev/group: Downloads
          gethomepage.dev/widget.type: radarr
          gethomepage.dev/widget.url: http://radarr.downloads
          hajimari.io/icon: movie-check
          gethomepage.dev/widget.key: ${RADARR_TOKEN}
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 2Gi
        storageClass: longhorn
    persistence:
      media:
        enabled: true
        existingClaim: downloads
        mountPath: /data
    #   add-ons:
    #     enabled: true
    #     type: emptyDir
    #     mountPath: /add-ons
    # sidecars:
    #   tdarr-inform:
    #     image: registry.k8s.io/git-sync/git-sync:v3.6.7
    #     imagePullPolicy: IfNotPresent
    #     args:
    #       - --repo=https://github.com/deathbybandaid/tdarr_inform.git
    #       - --branch=master
    #       - --depth=1
    #       - --wait=21600 # 6 hours
    #       - --root=/add-ons/tdarr-inform
    #     volumeMounts:
    #       - { name: add-ons, mountPath: /add-ons }
